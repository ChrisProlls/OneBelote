<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>Je joue souvent à la Belote entre amis ou en famille, alors j’ai décidé de développer une application qui m’aide à compter le score du jeu et pourquoi ne pas partager mon application avec vous ! Je voulais proposer une application simple, propre et facile à utiliser, permettant aux personnes de visualiser rapidement leurs scores.</value>
  </data>
  <data name="AboutLabel" xml:space="preserve">
    <value>À propos de</value>
  </data>
  <data name="Announcement" xml:space="preserve">
    <value>Annonce</value>
  </data>
  <data name="ConfirmationSave" xml:space="preserve">
    <value>Voulez-vous vraiment sauvegarder ?</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Alsacien dans l’âme et développeur Windows pendant plusieurs années, j’aime développer ddes applications Windows 10 afin de fournir un contenu de qualité sur la plate-forme et faciliter la vie quotidienne des personnes.</value>
  </data>
  <data name="EditLine" xml:space="preserve">
    <value>Editer la ligne</value>
  </data>
  <data name="Go" xml:space="preserve">
    <value>Go</value>
  </data>
  <data name="HomeAppDesc" xml:space="preserve">
    <value>Sur la gauche, vous pouvez accéder à un menu vous permettant de créer un nouveau jeu ou regarder les derniers jeux que vous enregistré.</value>
  </data>
  <data name="HomeDescription" xml:space="preserve">
    <value>BeloteScoring vous aide lors de vos parties de belote afin d’enregistrer les scores et calculer les totaux.</value>
  </data>
  <data name="HomeEnjoy" xml:space="preserve">
    <value>Bon jeu !</value>
  </data>
  <data name="HomeFeedback" xml:space="preserve">
    <value>N’hésitez pas à envoyer vos impressions !</value>
  </data>
  <data name="HomeLabel" xml:space="preserve">
    <value>Accueil</value>
  </data>
  <data name="HomeOther" xml:space="preserve">
    <value>Autres suites</value>
  </data>
  <data name="HomeTrump" xml:space="preserve">
    <value>Suite d'atout</value>
  </data>
  <data name="HomeWelcome" xml:space="preserve">
    <value>Bienvenue dans mon application !</value>
  </data>
  <data name="LastParties" xml:space="preserve">
    <value>Dernières parties</value>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>Nouvelle partie</value>
  </data>
  <data name="NewScore" xml:space="preserve">
    <value>Nouveau Score</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="NoneContent" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Résumé</value>
  </data>
  <data name="Save.Label" xml:space="preserve">
    <value>Enregistrer</value>
  </data>
  <data name="SavingOk" xml:space="preserve">
    <value>Score enregistré</value>
  </data>
  <data name="Them" xml:space="preserve">
    <value>Eux</value>
  </data>
  <data name="ThemContent" xml:space="preserve">
    <value>Eux</value>
  </data>
  <data name="TitleAbout" xml:space="preserve">
    <value>Pourquoi BeloteScoring ?</value>
  </data>
  <data name="TitleDescription" xml:space="preserve">
    <value>Hello, mon nom est Christophe</value>
  </data>
  <data name="Us" xml:space="preserve">
    <value>Nous</value>
  </data>
  <data name="UsContent" xml:space="preserve">
    <value>Nous</value>
  </data>
  <data name="WhoHasBelote" xml:space="preserve">
    <value>Qui a la Belote ?</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="YourScore" xml:space="preserve">
    <value>Votre score</value>
  </data>
</root>